import { ChildProcessWithoutNullStreams } from 'child_process';

declare type ShellacValueInterpolation = string | boolean | undefined | number | null;
declare type ShellacInterpolations = ShellacValueInterpolation | Promise<ShellacValueInterpolation> | ((a: string) => void) | ((a: string) => Promise<void>) | (() => Promise<void | ShellacValueInterpolation>);
declare type ShellacReturnVal = {
    stdout: string;
    stderr: string;
    [key: string]: string;
};
declare type ShellacBGReturnVal = {
    process: ChildProcessWithoutNullStreams;
    pid: number;
    kill: () => void;
    promise: Promise<ShellacReturnVal>;
};
declare type ShellacImpl = (s: TemplateStringsArray, ...interps: ShellacInterpolations[]) => Promise<ShellacReturnVal>;
declare type ShellacBGImpl = (s: TemplateStringsArray, ...interps: ShellacInterpolations[]) => Promise<ShellacBGReturnVal>;

declare const shellac: ShellacImpl & {
    in: (cwd: string) => ShellacImpl;
    bg: ShellacBGImpl;
};

export { shellac as default };
